name: Build and Pack NuGet Package

on:
  push:
    branches:
      - main  

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Get current version
        id: get_version
        run: |
          # Read the version from the .csproj file
          cd DriverFactory
          VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" DriverFactory.csproj)
          echo "Current version: $VERSION"
          # Increment the version (example: incrementing the patch version)
          IFS='.' read -r -a version_parts <<< "$VERSION"
          PATCH=$((version_parts[2]+1))
          NEW_VERSION="${version_parts[0]}.${version_parts[1]}.${PATCH}"
          echo "New version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release

      - name: Test
        run: dotnet test --configuration Release

      - name: Pack
        run: dotnet pack --configuration Release --output ./nupkgs

      - name: Upload NuGet Package as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: nuget-packages
          path: ./nupkgs/*.nupkg
